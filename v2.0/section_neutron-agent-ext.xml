<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!-- Useful for describing APIs -->
<!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
<!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
<!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
<!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
]>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:db="http://docbook.org/ns/docbook" version="5.0"
    status="final" xml:id="agent_ext">
    <title>Agent management</title>
    <para>In a typical OpenStack Networking deployment, some agents
        run on network or compute nodes, such as
            <literal>neutron-dhcp-agent</literal>,
            <literal>neutron-ovs-agent</literal>, and
            <literal>neutron-l3-agent</literal>. This extension
        enables administrators (enforced by the policy engine) to view
        status and update attributes for agents. Updating agent
        management API attributes affects operations of other
        components, such as OpenStack Networking schedulers. For
        example, administrators can disable a specified agent so that
        OpenStack Networking schedulers do not schedule resources to
        it.</para>
    <para>For how to use agent management extension and OpenStack
        Networking schedulers feature, see the <citetitle>OpenStack
            Cloud Administrator Guide</citetitle>.</para>
    <informaltable rules="all" width="100%">
        <col width="20%"/>
        <col width="20%"/>
        <col width="60%"/>
        <thead>
            <tr align="center">
                <td>Verb</td>
                <td>URI</td>
                <td>Description</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>&GET;</td>
                <td>/agents</td>
                <td>Lists agents that report their status to OpenStack
                    Networking server.</td>
            </tr>
            <tr>
                <td>&GET;</td>
                <td>/agents/<parameter>agent_id</parameter></td>
                <td>Shows details for a specified agent.</td>
            </tr>
            <tr>
                <td>&PUT;</td>
                <td>/agents/<parameter>agent_id</parameter></td>
                <td>Updates the admin status and description for a
                    specified agent.</td>
            </tr>
            <tr>
                <td>&DELETE;</td>
                <td>/agents/<parameter>agent_id</parameter></td>
                <td>Deletes a specified agent.</td>
            </tr>
        </tbody>
    </informaltable>
    <section xml:id="List_Agents">
        <title>List agents</title>
        <informaltable rules="all" width="100%">
            <col width="20%"/>
            <col width="20%"/>
            <col width="60%"/>
            <thead>
                <tr>
                    <td>Verb</td>
                    <td>URI</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>&GET;</td>
                    <td>/agents</td>
                    <td>Lists agents that report their status to
                        OpenStack Networking server.</td>
                </tr>
            </tbody>
        </informaltable>
        <simpara>Normal Response Code: <returnvalue>200</returnvalue>
        </simpara>
        <para>This operation does not require a request body.</para>
        <para>This operation returns a response body. The default
            policy behavior is that non-admin user won't be able to
            see any agent in the response when this call is
            invoked</para>
        <example>
            <title>List agents: JSON request</title>
            <programlisting>GET /v2.0/agents HTTP/1.1
Host: controlnode:9696
User-Agent: python-neutronclient
Content-Type: application/json
Accept: application/json
X-Auth-Token: c52a1b304fec4ca0ac85dc1741eec6e2</programlisting>
        </example>
        <example>
            <title>List agents: JSON response</title>
            <programlisting language="json"><xi:include href="samples/agents/agents-list-res.json" parse="text"/></programlisting>
        </example>
    </section>
    <section xml:id="Show_Agent">
        <title>Show agent details</title>
        <informaltable rules="all" width="100%">
            <col width="20%"/>
            <col width="20%"/>
            <col width="60%"/>
            <thead>
                <tr>
                    <td>Verb</td>
                    <td>URI</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>&GET;</td>
                    <td>/agents/<parameter>agent_id</parameter></td>
                    <td>Shows details for a specified agent.</td>
                </tr>
            </tbody>
        </informaltable>
        <simpara>Normal Response Code: <returnvalue>200</returnvalue>
        </simpara>
        <simpara>Error Response Codes:NotFound
                (<errorcode>404</errorcode>) if not authorized or the
            agent does not exist</simpara>
        <para>This operation returns information for the given
            agent.</para>
        <para>This operation does not require a request body.</para>
        <para>This operation returns a response body. The body
            contents depend on the agent's type.</para>
        <example>
            <title>Show agent details: JSON request</title>
            <programlisting>GET /v2.0/agents/af4567ad-c2e6-4311-944d-22efc12f89af HTTP/1.1
Host: controlnode:9696
User-agent: python-neutronclient
Content-Type: application/json
Accept: application/json
X-Auth-Token: a54d6fdda41341f892150e2aaf648f0d</programlisting>
        </example>
        <example>
            <title>Show agent details: JSON response</title>
            <programlisting language="json"><xi:include href="samples/agents/agents-show-res.json" parse="text"/></programlisting>
        </example>
    </section>
    <section xml:id="Update_Agent">
        <title>Update agent</title>
        <informaltable rules="all" width="100%">
            <col width="20%"/>
            <col width="20%"/>
            <col width="60%"/>
            <thead>
                <tr>
                    <td>Verb</td>
                    <td>URI</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>&PUT;</td>
                    <td>/agents/<parameter>agent_id</parameter></td>
                    <td>Updates the admin status and description for a
                        specified agent.</td>
                </tr>
            </tbody>
        </informaltable>
        <simpara>Normal Response Code: <returnvalue>200</returnvalue>
        </simpara>
        <simpara>Error Response Codes: BadRequest
                (<errorcode>400</errorcode>) if something other than
            description or admin status is changed, NotFound
                (<errorcode>404</errorcode>) if not authorized or the
            agent does not exist</simpara>
        <para>This operation updates the agent's admin status and
            description.</para>
        <para>This operation requires a request body.</para>
        <para>This operation returns a response body.</para>
        <example>
            <title>Update agent: JSON request</title>
            <programlisting>PUT /v2.0/agents/af4567ad-c2e6-4311-944d-22efc12f89af HTTP/1.1
Host: controlnode:9696
User-Agent: python-neutronclient
Content-Type: application/json
Accept: application/json
X-Auth-Token: 4cbb09e780434b249ff596d6979fd8fc
Content-Length: 38<xi:include href="samples/agents/agents-put-req.json" parse="text"/></programlisting>
        </example>
        <example>
            <title>Update agents: JSON response</title>
            <programlisting language="json"><xi:include href="samples/agents/agents-put-res.json" parse="text"/></programlisting>
        </example>
    </section>
    <?hard-pagebreak?>
    <section xml:id="Delete_Agent">
        <title>Delete agent</title>
        <informaltable rules="all" width="100%">
            <col width="20%"/>
            <col width="20%"/>
            <col width="60%"/>
            <thead>
                <tr>
                    <td>Verb</td>
                    <td>URI</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>&DELETE;</td>
                    <td>/agents/<parameter>agent_id</parameter></td>
                    <td>Deletes a specified agent.</td>
                </tr>
            </tbody>
        </informaltable>
        <simpara>Normal Response Code: <returnvalue>204</returnvalue>
        </simpara>
        <simpara>Error Response Codes: NotFound
                (<errorcode>404</errorcode>) if not authorized or the
            agent does not exist</simpara>
        <para>This operation deletes the agent.</para>
        <para>This operation does not require a request body.</para>
        <para>This operation does not return a response body.</para>
        <example>
            <title>Delete agent: JSON request</title>
            <programlisting>DELETE /v2.0/agents/44002aeb-2817-4cb8-9306-34308b4b40d9 HTTP/1.1
Host: controlnode:9696
User-Agent: python-neutronclient
Content-Type: application/json
Accept: application/json
X-Auth-Token: 4cbb09e780434b249ff596d6979fd8fc</programlisting>
        </example>
        <example>
            <title>Delete agent: JSON response</title>
            <programlisting language="json"><xi:include href="samples/agents/agents-delete-res-json-http.txt" parse="text"/></programlisting>
        </example>
    </section>
</section>
